package com.pay.aile.bill.analyze.banktemplate;

import java.util.ArrayList;
import java.util.List;

import org.springframework.transaction.annotation.Transactional;

import com.pay.aile.bill.entity.CreditBill;
import com.pay.aile.bill.entity.CreditBillDetail;
import com.pay.aile.bill.entity.CreditBillDetailRelation;
import com.pay.aile.bill.entity.CreditCard;
import com.pay.aile.bill.model.AnalyzeParamsModel;

public class BaseBankSeparateTemplate extends BaseBankTemplate {
    @Transactional
    @Override
    protected void handleResultInternal(AnalyzeParamsModel apm) {
        Long emailId = apm.getEmailId();
        int month = 0;
        // 保存或更新卡信息
        List<CreditCard> cardList = apm.getResult().getCardList();
        creditCardService.saveOrUpateCreditCard(cardList);
        // 保存账单
        List<CreditBill> billList = apm.getResult().getBillList();
        for (int i = 0; i < billList.size(); i++) {
            CreditBill bill = billList.get(i);
            bill.setCardId(cardList.get(i).getId());
            bill.setCardNumbers(cardList.get(i).getNumbers());
            bill.setEmailId(emailId);
            bill.setSentDate(apm.getSentDate());
            month = Integer.valueOf(bill.getMonth());
        }
        if (!billList.isEmpty()) {
            creditBillService.saveCreditBill(billList);
        }

        // 根据明细中的卡号和账单中的卡号进行对应
        List<CreditBillDetail> detailList = apm.getResult().getDetailList();
        List<CreditBillDetailRelation> relationList = new ArrayList<CreditBillDetailRelation>();
        if (!detailList.isEmpty()) {
            // 保存明细
            creditBillDetailService.batchSaveBillDetail(month, detailList);
            billList.forEach(bill -> {
                String cardNo = bill.getCardNumbers();
                detailList.stream().filter(e -> e.getCardNumbers().equals(cardNo)).forEach(detail -> {
                    CreditBillDetailRelation relation = new CreditBillDetailRelation();
                    relation.setBillId(bill.getId());
                    relation.setBillDetailId(detail.getId());
                    relationList.add(relation);
                });
            });
            // 保存账单和明细的关系
            creditBillDetailRelationService.batchSaveBillDetailRelation(month, relationList);
        }
    }

}
