package com.pay.card.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.pay.card.Constants;
import com.pay.card.service.CreditFileService;
import com.pay.card.utils.DateUtil;

@Service
public class CreditFileServiceImpl implements CreditFileService {
    @Autowired
    @PersistenceContext
    private EntityManager entityManager;

    /**
     * 分页查询账单解析记录
     */
    @Override
    public List<Map<String, Object>> findCreditFileList(Integer page) {
        StringBuffer sql = new StringBuffer(
                "SELECT cf.process_result,cf.create_date,ur.user_id,ui.customer_no,cb.id as billId");
        sql.append(" FROM credit_file cf");
        sql.append(" LEFT JOIN credit_user_file_relation ur ON ur.file_id=cf.id");
        sql.append(" LEFT JOIN credit_user_info ui ON ui.id = ur.user_id");
        sql.append(" LEFT JOIN credit_bill cb ON cb.file_id = cf.id");
        sql.append(" WHERE 1=1 LIMIT ?,?");

        Integer pend = page * Constants.PAGE_SIZE;
        Integer pstart = pend - Constants.PAGE_SIZE;
        Query query = entityManager.createNativeQuery(sql.toString());
        query.setParameter(1, pstart);
        query.setParameter(2, pend);
        // query.unwrap(SQLQuery.class).setResultTransformer(Transformers.aliasToBean(CreditSetResponseBean.class));
        List<Object[]> list = query.getResultList();
        List<Map<String, Object>> resultList = new ArrayList<Map<String, Object>>();
        for (int i = 0; i < list.size(); i++) {
            Map<String, Object> tempMap = new HashMap<String, Object>();
            Object[] tempObject = list.get(i);
            tempMap.put("reuslt", tempObject[0]);
            tempMap.put("createDate", DateUtil.formatDate((Date) tempObject[1]));
            tempMap.put("userId", tempObject[2]);
            tempMap.put("customerNo", tempObject[3]);
            tempMap.put("billId", tempObject[4]);
            resultList.add(tempMap);
        }

        return resultList;
    }

}
